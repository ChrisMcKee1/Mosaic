[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mosaic-mcp-tool"
version = "0.1.0"
description = "Mosaic MCP Tool - Advanced Context Engineering for AI Applications"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Chris McKee", email = "chris@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["mcp", "ai", "context", "semantic-kernel", "azure", "llm"]

dependencies = [
    # Core MCP Server and Communication (FR-1, FR-3)
    "fastmcp>=0.1.0",
    "httpx>=0.25.0",
    
    # Semantic Kernel Framework (FR-2)
    "semantic-kernel>=1.0.0",
    
    # Azure Services Integration (FR-4)
    "azure-identity>=1.15.0",
    "azure-keyvault-secrets>=4.7.0",
    "azure-storage-blob>=12.19.0",
    
    # Azure Cosmos DB (FR-6, FR-10) - OmniRAG unified backend
    "azure-cosmos>=4.5.0",
    
    # Azure Cache for Redis (FR-10)
    "redis>=5.0.0",
    
    # Azure Functions (FR-11)
    "azure-functions>=1.18.0",
    
    # Machine Learning and Reranking (FR-8)
    "transformers>=4.35.0",
    "torch>=2.1.0",
    "sentence-transformers>=2.2.0",
    
    # Data Processing and Utilities
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
    "rich>=13.7.0",
    
    # Async and Networking
    "aiofiles>=23.2.0",
    "aiohttp>=3.9.0",
    
    # Authentication and Security (FR-14)
    "PyJWT>=2.8.0",
    
    # Type Hints and Development
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.10.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
    "fakeredis>=2.20.0",
]

docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/ChrisMcKee1/Mosaic"
Documentation = "https://github.com/ChrisMcKee1/Mosaic/blob/main/README.md"
Repository = "https://github.com/ChrisMcKee1/Mosaic"
Issues = "https://github.com/ChrisMcKee1/Mosaic/issues"

[project.scripts]
mosaic-server = "mosaic.server.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"mosaic" = ["*.yaml", "*.yml", "*.json", "*.toml"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "gremlinpython.*",
    "azure.*",
    "semantic_kernel.*",
    "sse_starlette.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src/mosaic",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "azure: marks tests that require Azure services",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/mosaic"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".tox",
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "W503",  # line break before binary operator
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]